@using static Frontend.Models.Orders.DTOs;
@model CartDTO;

@{
    ViewData["Title"] = "User's Cart";
}

<div class="container mt-4">
    <h3 class="mb-3">Giỏ hàng của bạn</h3>

    @if (Model != null && Model.Items.Any())
    {
        <form id="checkoutForm" method="post" asp-controller="Order" asp-action="CreateOrder">
            <input type="hidden" name="userId" value="@Model.UserId" />
            <table class="table table-bordered align-middle text-center">
                <thead class="table-light">
                    <tr>
                        <th><input type="checkbox" id="selectAll" /></th>
                        <th class="text-start">Tên sản phẩm</th>
                        <th>Giá</th>
                        <th style="width: 160px;">Số lượng</th>
                        <th>Thành tiền</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <!-- Checkbox chọn -->
                            <td>
                                <input type="checkbox" class="product-checkbox"
                                       name="selectedProducts" value="@item.ProductId" />
                            </td>

                            <!-- Tên sản phẩm -->
                            <td class="text-start">
                                <strong>@item.ProductName</strong><br />
                                <span id="status-@item.CartItemId"
                                      class="badge @(item.IsAvailable ? "bg-success" : "bg-secondary")">
                                    @(item.IsAvailable ? "Còn hàng" : item.ErrorMessage)
                                </span>
                            </td>

                            <!-- Giá -->
                            <td>@item.Price.ToString("N0") đ</td>

                            <!-- Nút tăng/giảm -->
                            <td>
                                <div class="d-flex justify-content-center align-items-center">
                                    <button type="button" class="btn btn-sm btn-light border quantity-btn decrease"
                                            data-user-id="@Model.UserId"
                                            data-item-id="@item.CartItemId"
                                            data-product-id="@item.ProductId">
                                        -
                                    </button>
                                    <span class="mx-2 fw-bold quantity-value" id="qty-@item.CartItemId">@item.Quantity</span>
                                    <button type="button" class="btn btn-sm btn-light border quantity-btn increase"
                                            data-user-id="@Model.UserId"
                                            data-item-id="@item.CartItemId"
                                            data-product-id="@item.ProductId">
                                        +
                                    </button>
                                </div>
                            </td>

                            <!-- Thành tiền -->
                            <td id="subtotal-@item.CartItemId" class="fw-bold text-primary">
                                @((item.Price * item.Quantity).ToString("N0")) đ
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Tổng kết -->
            <div class="mt-3 text-end">
                <p id="totalItems"><strong>Tổng sản phẩm:</strong> @Model.TotalItems</p>
                <p id="totalPrice"><strong>Tổng tiền:</strong> @Model.TotalPrice.ToString("N0") đ</p>
            </div>

            <!-- Tạo đơn hàng -->
            <div class="mt-3 text-end">
                <button type="submit" class="btn btn-primary">Tạo đơn hàng</button>
            </div>
        </form>
    }
    else
    {
        <p class="text-danger text-center">Giỏ hàng của bạn đang trống.</p>
    }
</div>



@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll(".quantity-btn").forEach(btn => {
                btn.addEventListener("click", async () => {
                    const userId = btn.dataset.userId;
                    const cartItemId = btn.dataset.itemId;
                    const productId = btn.dataset.productId;
                    const qtySpan = document.getElementById(`qty-${cartItemId}`);
                    let currentQty = parseInt(qtySpan.textContent);

                    // hiệu ứng loading: disable cả 2 nút của sản phẩm này
                    const parentDiv = btn.closest(".d-flex");
                    const allBtns = parentDiv.querySelectorAll(".quantity-btn");
                    allBtns.forEach(b => b.disabled = true);

                    // thêm hiệu ứng ...
                    qtySpan.setAttribute("data-old", qtySpan.textContent);
                    qtySpan.textContent = "...";

                    if (btn.classList.contains("increase")) {
                        currentQty++;
                    } else if (btn.classList.contains("decrease") && currentQty > 1) {
                        currentQty--;
                    }

                    try {
                        const response = await fetch(`/Order/UpdateQuantity?userId=${userId}&cartItemId=${cartItemId}`, {
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                                productId: productId,
                                quantity: currentQty
                            })
                        });

                        if (response.ok) {
                            const result = await response.json();
                            const cart = result.data;

                            if (cart && cart.items) {
                                cart.items.forEach(it => {
                                    const qtySpan = document.getElementById(`qty-${it.cartItemId}`);
                                    const subtotalCell = document.getElementById(`subtotal-${it.cartItemId}`);
                                    const statusBadge = document.getElementById(`status-${it.cartItemId}`);

                                    if (qtySpan) qtySpan.textContent = it.quantity;

                                    if (subtotalCell) {
                                        subtotalCell.textContent = it.isAvailable
                                            ? (it.price * it.quantity).toLocaleString() + " đ"
                                            : "0 đ";
                                    }

                                    if (statusBadge) {
                                        const errMsg = it.errorMessage || it.ErrorMessage || "";
                                        statusBadge.className = "badge " + (it.isAvailable ? "bg-success" : "bg-secondary");
                                        statusBadge.textContent = it.isAvailable ? "Còn hàng" : errMsg;
                                    }
                                });

                                // Tổng sản phẩm + tổng tiền
                                document.getElementById("totalItems").innerHTML =
                                    `<strong>Tổng sản phẩm:</strong> ${cart.totalItems}`;
                                document.getElementById("totalPrice").innerHTML =
                                    `<strong>Tổng tiền:</strong> ${cart.totalPrice.toLocaleString()} đ`;
                            }
                        } else {
                            // nếu lỗi thì trả lại số cũ
                            qtySpan.textContent = qtySpan.getAttribute("data-old");
                            alert("❌ Lỗi cập nhật giỏ hàng.");
                        }
                    } catch (err) {
                        // nếu lỗi mạng thì rollback số cũ
                        qtySpan.textContent = qtySpan.getAttribute("data-old");
                        console.error("Network error:", err);
                        alert("❌ Có lỗi mạng. Thử lại sau.");
                    } finally {
                        // bật lại nút
                        allBtns.forEach(b => b.disabled = false);
                    }
                });
            });
        });
    </script>

    <script>
        // Chọn tất cả
        document.getElementById("selectAll")?.addEventListener("change", function () {
            document.querySelectorAll(".product-checkbox").forEach(cb => {
                cb.checked = this.checked;
            });
        });
    </script>
}
