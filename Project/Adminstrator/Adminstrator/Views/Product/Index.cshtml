@using Adminstrator.Models.Products;
@using Adminstrator.Models.Stores;

@model (StoreDto Store, List<DTOs.CategoryDTO> Categories, List<DTOs.ProductSellerDTO> Products)

@{
    ViewData["Title"] = "Store Menu";
}

<div class="container mt-4">
    <!-- Store Info -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h3 class="card-title">@Model.Store.StoreName</h3>
                    <p class="text-muted">@Model.Store.Description</p>
                    <ul class="list-unstyled mb-2">
                        <li><strong>Địa chỉ:</strong> @Model.Store.Address</li>
                        <li><strong>Điện thoại:</strong> @Model.Store.Phone</li>
                        <li>
                            <strong>Trạng thái:</strong>
                            <div class="form-check form-switch d-inline-block ms-2">
                                <input class="form-check-input" type="checkbox" id="toggleActive"
                                       @(Model.Store.IsActive ? "checked" : "")
                                       data-store-id="@Model.Store.StoreId" />
                                <label class="form-check-label" for="toggleActive">
                                    @(Model.Store.IsActive ? "Mở cửa" : "Đóng cửa")
                                </label>
                            </div>
                                
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Menu -->
    <div class="row">
        <!-- Sidebar Category -->
        <div class="col-md-3">
            <div class="card shadow-sm border-0 mb-3 position-sticky" style="top: 20px;">
                <div class="card-body p-3">
                    <h5 class="card-title mb-3">Danh mục sản phẩm</h5>
                    <ul class="list-group" id="categoryList">
                        @foreach (var cat in Model.Categories)
                        {
                            <li class="list-group-item list-group-item-action category-link"
                                data-target="cat-@cat.CategoryId">
                                @cat.CategoryName
                            </li>
                        }
                    </ul>

                    <button class="btn btn-outline-primary w-100 mt-3"
                            data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                        + Thêm danh mục mới
                    </button>
                </div>
            </div>

            <div class="card shadow-sm border-0 mb-3 position-sticky">
                <div class="card-body">
                    <button class="btn btn-outline-primary w-100 mt-3"
                            data-bs-toggle="modal" data-bs-target="#addProductModal" 
                            data-store-id="@Model.Store.StoreId">
                        + Thêm sản phẩm mới
                    </button>
                </div>
            </div>
        </div>

        <!-- Product List -->
        <div class="col-md-9">
            <div class="row">
                @foreach (var cat in Model.Categories)
                {
                    var hasProducts = Model.Products.Any(p => p.CategoryId == cat.CategoryId);

                    <div id="cat-@cat.CategoryId" class="mb-4 category-section">
                        <div class="d-flex justify-content-between align-items-center border-bottom pb-2">
                            <h4 class="m-0">@cat.CategoryName</h4>

                            @if (!hasProducts)
                            {
                                <button class="btn btn-sm btn-outline-danger"
                                        onclick="deleteCategory('@cat.CategoryId', '@Model.Store.StoreId')">
                                    <i class="bi bi-trash"></i> Xóa danh mục
                                </button>
                            }
                        </div>

                        @if (hasProducts)
                        {
                            @foreach (var product in Model.Products.Where(p => p.CategoryId == cat.CategoryId))
                            {
                                <div class="card product-card shadow-sm border-0 mb-3">
                                    <div class="row g-0 align-items-center flex-wrap">
                                        <!-- Ảnh sản phẩm -->
                                        <div class="col-12 col-md-3 text-center">
                                            <img src="@(string.IsNullOrEmpty(product.ProductImage) ? "/images/no-image.png" : product.ProductImage)"
                                                 alt="@product.ProductName"
                                                 class="img-fluid rounded-start product-img" />
                                        </div>

                                        <!-- Nội dung -->
                                        <div class="col-12 col-md-7">
                                            <div class="card-body py-3">
                                                <h5 class="card-title mb-1 text-truncate">@product.ProductName</h5>
                                                <p class="card-text text-muted small mb-2">@product.Description</p>

                                                <div class="row small">
                                                    <div class="col-sm-6"><strong>Giá nhập:</strong> @product.ImportPrice.ToString("N0") đ</div>
                                                    
                                                </div>

                                                <div class="row small">
                                                    <div class="col-sm-6"><strong>Giá bán:</strong> @product.SalePrice.ToString("N0") đ</div>
                                                    @* <div class="col-sm-6"><strong>Số lượng:</strong> @product.Quantity</div> *@
                                                </div>

                                                <div class="row small mt-1">
                                                    <div class="col-sm-12">
                                                        <strong>Nhà cung cấp:</strong> @(product.Supplier ?? "Không có")
                                                    </div>
                                                </div>

                                                <strong>Status:</strong>
                                                <div class="form-check form-switch d-inline-block ms-2">
                                                    <input class="form-check-input toggle-active" type="checkbox" data-product-id="@product.ProductId"
                                                           @(product.IsActive ? "checked" : "")
                                                           data-product-id="@product.ProductId" />
                                                    <label class="form-check-label @(product.IsActive ? "text-success" : "text-muted")">
                                                        @(product.IsActive ? "Còn hàng" : "Hết hàng")
                                                    </label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-12 col-md-2 d-flex flex-md-column flex-row justify-content-center align-items-center gap-2 p-3">
                                            <button class="btn btn-sm btn-warning w-100"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#editProductModal-@product.ProductId">
                                                <i class="bi bi-pencil-square me-1"></i> Chỉnh sửa
                                            </button>

                                            @* <button type="button"
                                                    class="btn btn-sm btn-danger w-100"
                                                    onclick="deleteProduct('@product.ProductId', '@Model.Store.StoreId')">
                                                <i class="bi bi-trash me-1"></i> Xóa
                                            </button> *@
                                        </div>
                                        <!-- Nút chỉnh sửa
                                        <div class="col-12 col-md-2 text-md-end text-center p-3">
                                            <div class="row mt-3">
                                                <button class="btn btn-sm btn-warning"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#editProductModal-@product.ProductId">
                                                    Chỉnh sửa
                                                </button>
                                            </div>

                                            <div class="row">
                                                <button class="btn btn-sm btn-danger" asp-controller="Product"
                                                        asp-action="DeleteProduct" asp-route-productId="@product.ProductId">
                                                    Xóa
                                                </button>
                                            </div>

                                        </div> -->
                                    </div>
                                </div>

                                <!-- Modal Edit Product -->
                                <div class="modal fade" id="editProductModal-@product.ProductId" tabindex="-1" aria-hidden="true">
                                    <div class="modal-dialog modal-lg">
                                        <div class="modal-content">
                                            <form asp-controller="Product" asp-action="UpdateProduct" asp-route-storeId="@Model.Store.StoreId" method="post" enctype="multipart/form-data">

                                                <div class="modal-header">
                                                    <h5 class="modal-title">Chỉnh sửa sản phẩm</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                                </div>

                                                <div class="modal-body">
                                                    <input type="hidden" name="ProductId" value="@product.ProductId" />

                                                    <div class="mb-3">
                                                        <label class="form-label">Tên sản phẩm</label>
                                                        <input type="text" name="ProductName" value="@product.ProductName" class="form-control" required />
                                                    </div>

                                                    <div class="mb-3">
                                                        <label class="form-label">Mô tả</label>
                                                        <textarea name="Description" class="form-control" rows="3">@product.Description</textarea>
                                                    </div>

                                                    <div class="mb-3">
                                                        <label class="form-label">Hình ảnh sản phẩm</label>

                                                        <!-- Hiển thị ảnh hiện tại -->
                                                        <div class="mb-2 text-center">
                                                            <img src="@(string.IsNullOrEmpty(product.ProductImage) ? "/images/no-image.png" : product.ProductImage)"
                                                                 alt="Ảnh hiện tại"
                                                                 class="img-thumbnail"
                                                                 style="max-width: 180px; max-height: 180px; object-fit: cover;" />
                                                        </div>

                                                        <!-- Input upload ảnh mới -->
                                                        <input type="file" name="ProductImageFile" accept="image/*" class="form-control" 
                                                                value="@product.ProductImage"/>

                                                        <small class="text-muted d-block mt-1">
                                                            Chọn ảnh mới nếu bạn muốn thay đổi (định dạng .jpg, .png, .jpeg, dung lượng ≤ 2MB).
                                                        </small>
                                                    </div>

                                                    <div class="mb-3 category-picker" data-edit-category>
                                                        <label class="form-label">Danh mục</label>

                                                        <div class="dropdown w-100">
                                                            <button class="btn btn-outline-secondary w-100 d-flex justify-content-between align-items-center"
                                                                    type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                                <span class="category-text">
                                                                    @Model.Categories.FirstOrDefault(c => c.CategoryId == product.CategoryId)?.CategoryName
                                                                </span>
                                                                <span class="ms-2">▾</span>
                                                            </button>

                                                            <ul class="dropdown-menu w-100 shadow">
                                                                @foreach (var c in Model.Categories)
                                                                {
                                                                    <li>
                                                                        <button type="button" class="dropdown-item" data-value="@c.CategoryId">
                                                                            @c.CategoryName
                                                                        </button>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        </div>

                                                        <!-- Hidden submit -->
                                                        <input type="hidden" name="CategoryId" value="@product.CategoryId" required />
                                                    </div>



                                                    @* <div class="mb-3">
                                                        <label class="form-label">Danh mục</label>
                                                        <div class="input-group">
                                                            <select name="CategoryId" class="form-select" required>
                                                                <option value="">-- Chọn danh mục --</option>
                                                                @foreach (var c in Model.Categories)
                                                                {
                                                                    <option value="@c.CategoryId" selected="@(c.CategoryId == product.CategoryId)">
                                                                        @c.CategoryName
                                                                    </option>
                                                                }
                                                            </select>
                                                            <!-- <button type="button" class="btn btn-outline-primary"
                                                                data-bs-toggle="modal" data-bs-target="#quickAddCategoryModal">
                                                            + Thêm
                                                            </button> -->
                                                        </div>
                                                    </div> *@

                                                    <div class="row">
                                                        <div class="col-md-6 mb-3">
                                                            <label class="form-label">Giá nhập</label>
                                                            <input type="text" name="ImportPrice" value="@string.Format("{0:N0}", product.ImportPrice)" class="form-control" required />
                                                        </div>

                                                        <div class="col-md-6 mb-3">
                                                            <label class="form-label">Giá bán</label>
                                                            <input type="text" name="SalePrice" value="@string.Format("{0:N0}", product.SalePrice)" class="form-control" required />
                                                        </div>
                                                        @* <div class="col-md-6 mb-3">
                                                            <label class="form-label">Số lượng</label>
                                                            <input type="number" name="Quantity" value="@product.Quantity" class="form-control" required />
                                                        </div> *@
                                                    </div>

                                                    <div class="mb-3">
                                                        <label class="form-label">Nhà cung cấp</label>
                                                        <input type="text" name="Supplier" value="@product.Supplier" class="form-control" />
                                                    </div>

                                                </div>

                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                                    <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }


                        }
                        else
                        {
                            <div class="text-muted fst-italic mt-2">Không có sản phẩm nào trong danh mục này.</div>
                        }


                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal Add Category -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="categoryForm">
                <div class="modal-header">
                    <h5 class="modal-title">Thêm danh mục mới</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Tên danh mục</label>
                        <input type="text" name="CategoryName" class="form-control" required />
                    </div>
                    <input type="hidden" name="StoreId" value="@Model.Store.StoreId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Thêm</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Modal Add Product -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-controller="Product" asp-action="CreateProduct" 
                method="post" id="ProductForm" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title">Thêm sản phẩm mới</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <div class="modal-body">
                    <input type="hidden" name="StoreId" value="@Model.Store.StoreId" />

                    <div class="mb-3">
                        <label class="form-label">Tên sản phẩm</label>
                        <input type="text" name="ProductName" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Mô tả</label>
                        <textarea name="Description" class="form-control" rows="3" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Hình ảnh sản phẩm</label>
                        <input type="file" name="NewImageFile" accept="image/*" class="form-control" />
                        <small class="text-muted d-block mt-1">
                            Định dạng .jpg, .png, .jpeg — dung lượng ≤ 2MB
                        </small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Danh mục</label>
                        <div class="dropdown w-100" id="addCategoryDropdown">
                            <button class="btn btn-outline-secondary w-100 d-flex justify-content-between align-items-center"
                                    type="button" id="addCategoryBtn" data-bs-toggle="dropdown" aria-expanded="false">
                                <span id="addCategoryText">-- Chọn danh mục --</span>
                                <span class="ms-2">▾</span>
                            </button>
                            <ul class="dropdown-menu w-100 shadow" id="addCategoryList" aria-labelledby="addCategoryBtn">
                                @foreach (var c in Model.Categories)
                                {
                                    <li>
                                        <button type="button" class="dropdown-item"
                                                data-value="@c.CategoryId">
                                            @c.CategoryName
                                        </button>
                                    </li>
                                }
                            </ul>
                        </div>
                        <input type="hidden" name="CategoryId" id="addCategoryId" value="" required />
                    </div>


                    @* <div class="mb-3">
                        <label class="form-label">Danh mục</label>
                        <div class="input-group">
                            <select name="CategoryId" class="form-select" required>
                                <option value="">-- Chọn danh mục --</option>
                                @foreach (var c in Model.Categories)
                                {
                                    <option value="@c.CategoryId">@c.CategoryName</option>
                                }
                            </select>
                            <!-- <button type="button" class="btn btn-outline-primary"
                                    data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                                + Thêm
                            </button> -->
                        </div>
                    </div>  *@

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Giá nhập</label>
                            <input type="number" name="ImportPrice" class="form-control" required />
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Giá bán</label>
                            <input type="number" name="SalePrice" class="form-control" required />
                        </div>
                        
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Nhà cung cấp</label>
                        <input type="text" name="Supplier" class="form-control" required/>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-primary">Thêm sản phẩm</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {

    @* <script>
        document.getElementById("addProductModal").addEventListener("submit", async function (e) {
            e.preventDefault();

            const formData = new FormData(this) 

        }
    </script> *@

    <!-- Delete Category -->
    <script>
        async function deleteCategory(categoryId, storeId) {
            if(!confirm("Bạn có muốn xóa danh mục này?")) return; 

            try {
                const response = await fetch(`/Product/delete-category?category_id=${categoryId}`, {
                    method: "DELETE",
                    headers: {"Content-Type": "application/json"},
                });

                const data = await response.json();

                if(response.ok && data.success) {
                    //alert(data.message || "✅ Xóa danh mục thành công!");
                    window.location.href = `/Product/Management/${storeId}`;

                } else {
                    showAlert("❌ Lỗi khi xóa danh mục: " + (data.message || "Không rõ nguyên nhân"), "error");
                    //alert("❌ Lỗi khi xóa danh mục: " + (data.message || "Không rõ nguyên nhân"));
                }
            } catch (err) {
                console.error("⚠️ Lỗi JS:", err);
                showAlert("⚠️ Lỗi kết nối đến server!", "error");
                //alert("⚠️ Lỗi kết nối đến server!");
            }
        }
    </script>

    <!-- Create Category -->
    <script>
        // Create Category
        document.getElementById("categoryForm").addEventListener("submit", async function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const storeId = formData.get("StoreId")
            const categoryName = formData.get("CategoryName")

            const request = {
                storeId: storeId,
                categoryName: categoryName
            };

            console.log("   ➤ storeId:", storeId);
            console.log("   ➤ categoryName:", categoryName);

            try {
                const response = await fetch(`/Product/create-category`, {
                    method: "POST",
                    headers: {"Content-Type": "application/json"},
                    body: JSON.stringify(request)
                });

                if(!response.ok) {
                    const text = await response.text();
                    showAlert("❌ Lỗi backend: " + text, "error");
                    alert("❌ Lỗi backend: " + text);
                    return;
                }

                const result = await response.json();

                if(result.success) {
                    //alert(result.message || "✅ Thêm danh mục thành công!");
                    window.location.href =  "/Product/Management/" + storeId;
                } else {
                    showAlert("❌ Lỗi khi xóa danh mục: " + (data.message || "Không rõ nguyên nhân"), "error");
                    //alert("❌ Thêm danh mục thất bại: " + (result.message || "Không rõ nguyên nhân"));
                }

            } catch (err) {
                console.error("❌ Exception:", err);
                showAlert("❌ Exception: " + err.message, "error");
                //alert("❌ Exception: " + err.message);
            }
        }) 
        
    </script>

    <!-- Scroll Category -->
    <script>
        // Scroll đến danh mục khi click
        document.querySelectorAll(".category-link").forEach(link => {
            link.addEventListener("click", function () {
                const target = document.getElementById(this.dataset.target);
                if (target) {
                    window.scrollTo({
                        top: target.offsetTop - 100,
                        behavior: "smooth"
                    });
                }
            });
        });
    </script>

    <!-- deleteProduct function -->
    <script>

        async function deleteProduct(productId, storeId) {
            if (!confirm("Bạn có chắc chắn muốn xóa sản phẩm này không?")) return;
            
            try {
                const response = await fetch(`/delete-product?productId=${productId}&storeId=${storeId}`, {
                    method: "DELETE",
                    header: {
                        "Accept": "application/json"
                    }
                });

                const data = await response.json();
                
                if (response.ok & data.success) {
                    showAlert(data.message || "Xóa sản phẩm thành công", "success");
                    //alert(data.message || "Xóa sản phẩm thành công");
                    location.reload();

                } else {
                    showAlert("❌ Lỗi khi xóa: " + (data.message || "Không rõ nguyên nhân"), "error")
                    //alert("❌ Lỗi khi xóa: " + (data.message || "Không rõ nguyên nhân"));
                }
            } catch (err) {
                console.eror(err)
                showAlert("⚠️ Lỗi kết nối đến server!", "error");
                //alert("⚠️ Lỗi kết nối đến server.");
            }

        }
    </script>

    <!-- Update Active-product function -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".toggle-active").forEach(toggle => {
                toggle.addEventListener("change", async function () {
                    const productId = this.dataset.productId;
                    const isActive = this.checked;
                    const label = this.nextElementSibling; // 👉 label đi ngay sau input

                    try {
                        const response = await fetch(`/Product/change-active`, {
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ productId, isActive })
                        });

                        console.log("📥 Raw response:", response);

                        const data = await response.json();
                        console.log("📦 Parsed data:", data);

                        if (response.ok && data?.success) {
                            label.textContent = isActive ? "Còn hàng" : "Hết hàng";
                            //label.classList.remove("text-warning");
                            label.classList.toggle("text-success", isActive);
                            label.classList.toggle("text-muted", !isActive);
                        } else {
                            showAlert("❌ Cập nhật trạng thái thất bại!", "error");
                            //alert("❌ Cập nhật trạng thái thất bại!");
                            this.checked = !isActive;
                            label.textContent = this.checked ? "Còn hàng" : "Hết hàng";
                            //label.classList.remove("text-warning");
                            label.classList.toggle("text-success", this.checked);
                            label.classList.toggle("text-muted", !this.checked);
                        }
                    } catch (err) {
                        console.error("⚠️ Lỗi JS:", err);
                        showAlert("⚠️ Có lỗi trong xử lý client-side!", "error");
                        //alert("⚠️ Có lỗi trong xử lý client-side!");
                        this.checked = !isActive;
                        label.textContent = this.checked ? "Còn hàng" : "Hết hàng";
                        //label.classList.remove("text-warning");
                        label.classList.toggle("text-success", this.checked);
                        label.classList.toggle("text-muted", !this.checked);
                    }
                });
            });
        });


    </script>

    <!-- Update Active-Store function -->
    <script>
        // Update Status Store
        document.addEventListener("DOMContentLoaded", function () {
            const toggle = document.getElementById("toggleActive");

            toggle.addEventListener("change", async function () {
                const storeId = this.getAttribute("data-store-id");
                const isActive = this.checked;

                try {
                    const response = await fetch(`/Admin/Store/ChangeActive`, {
                        method: "PATCH",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ storeId, isActive })
                    });

                    console.log("📥 Raw response:", response);

                    const data = await response.json().catch(() => null);
                    console.log("📦 Parsed data:", data);

                    if (response.ok) {
                        const label = document.querySelector("label[for='toggleActive']");
                        label.textContent = isActive ? "Mở cửa" : "Đóng cửa";
                        label.classList.toggle("text-success", isActive);
                        label.classList.toggle("text-muted", !isActive);
                    } else {
                        showAlert("❌ Cập nhật trạng thái thất bại!", "error");
                        //alert("❌ Cập nhật trạng thái thất bại!");
                        this.checked = !isActive; // rollback
                    }
                } catch (err) {
                    showAlert("⚠️ Lỗi kết nối server!", "error");
                    //alert("⚠️ Lỗi kết nối server!");
                    this.checked = !isActive; // rollback
                }
            });
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
          // ADD PRODUCT dropdown (nếu bạn đã đổi ở modal "Thêm sản phẩm")
          const addWrap = document.getElementById("addCategoryDropdown")?.closest(".mb-3");
          if (addWrap) {
            const list = document.getElementById("addCategoryList");
            const text = document.getElementById("addCategoryText");
            const hidden = document.getElementById("addCategoryId");
            list?.addEventListener("click", (e) => {
              const item = e.target.closest(".dropdown-item");
              if (!item) return;
              hidden.value = item.dataset.value;
              text.textContent = item.textContent.trim();
            });
          }

          // EDIT PRODUCT dropdowns — KHÔNG cần productId
          document.querySelectorAll(".category-picker[data-edit-category]").forEach((wrap) => {
            const list   = wrap.querySelector(".dropdown-menu");
            const textEl = wrap.querySelector(".category-text");
            const hidden = wrap.querySelector('input[type="hidden"][name="CategoryId"]');

            list.addEventListener("click", (e) => {
              const item = e.target.closest(".dropdown-item");
              if (!item) return;
              hidden.value = item.dataset.value;                 // ✅ không còn null
              textEl.textContent = item.textContent.trim();
            });
          });
        });
    </script>



    
}
